{"id":"../../../node_modules/bs-platform/lib/js/caml_io.js","dependencies":[{"name":"/Users/michelemendel/checkouts/thereason/package.json","includedInParent":true,"mtime":1550398422091},{"name":"/Users/michelemendel/checkouts/thereason/node_modules/bs-platform/package.json","includedInParent":true,"mtime":1550344525053},{"name":"./curry.js","loc":{"line":3,"column":20},"parent":"/Users/michelemendel/checkouts/thereason/node_modules/bs-platform/lib/js/caml_io.js","resolved":"/Users/michelemendel/checkouts/thereason/node_modules/bs-platform/lib/js/curry.js"},{"name":"process","parent":"/Users/michelemendel/checkouts/thereason/node_modules/bs-platform/lib/js/caml_io.js","resolved":"/Users/michelemendel/checkouts/thereason/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nvar Curry = require(\"./curry.js\");\n\nvar stdout = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write)) {\n        return ( process.stdout.write )(s);\n      } else if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nvar stderr = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nfunction caml_ml_flush(oc) {\n  if (oc[/* buffer */0] !== \"\") {\n    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);\n    oc[/* buffer */0] = \"\";\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_ml_output(oc, str, offset, len) {\n  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);\n  if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write ) && oc === stdout) {\n    return ( process.stdout.write )(str$1);\n  } else {\n    var id = str$1.lastIndexOf(\"\\n\");\n    if (id < 0) {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1;\n      return /* () */0;\n    } else {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);\n      caml_ml_flush(oc);\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);\n      return /* () */0;\n    }\n  }\n}\n\nfunction caml_ml_output_char(oc, $$char) {\n  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);\n}\n\nfunction caml_ml_out_channels_list(param) {\n  return /* :: */[\n          stdout,\n          /* :: */[\n            stderr,\n            /* [] */0\n          ]\n        ];\n}\n\nvar stdin = undefined;\n\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.caml_ml_flush = caml_ml_flush;\nexports.caml_ml_output = caml_ml_output;\nexports.caml_ml_output_char = caml_ml_output_char;\nexports.caml_ml_out_channels_list = caml_ml_out_channels_list;\n/* No side effect */\n","map":{"mappings":[{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_io.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}}],"sources":{"../../../node_modules/bs-platform/lib/js/caml_io.js":"'use strict';\n\nvar Curry = require(\"./curry.js\");\n\nvar stdout = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write)) {\n        return ( process.stdout.write )(s);\n      } else if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nvar stderr = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nfunction caml_ml_flush(oc) {\n  if (oc[/* buffer */0] !== \"\") {\n    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);\n    oc[/* buffer */0] = \"\";\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_ml_output(oc, str, offset, len) {\n  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);\n  if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write ) && oc === stdout) {\n    return ( process.stdout.write )(str$1);\n  } else {\n    var id = str$1.lastIndexOf(\"\\n\");\n    if (id < 0) {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1;\n      return /* () */0;\n    } else {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);\n      caml_ml_flush(oc);\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);\n      return /* () */0;\n    }\n  }\n}\n\nfunction caml_ml_output_char(oc, $$char) {\n  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);\n}\n\nfunction caml_ml_out_channels_list(param) {\n  return /* :: */[\n          stdout,\n          /* :: */[\n            stderr,\n            /* [] */0\n          ]\n        ];\n}\n\nvar stdin = undefined;\n\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.caml_ml_flush = caml_ml_flush;\nexports.caml_ml_output = caml_ml_output;\nexports.caml_ml_output_char = caml_ml_output_char;\nexports.caml_ml_out_channels_list = caml_ml_out_channels_list;\n/* No side effect */\n"},"lineCount":88}},"hash":"83bf4ef6769b819539a25fe2283d51bd","cacheData":{"env":{}}}