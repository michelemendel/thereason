{"id":"y6Gr","dependencies":[{"name":"/Users/michelemendel/checkouts/thereason/package.json","includedInParent":true,"mtime":1550363329176},{"name":"/Users/michelemendel/checkouts/thereason/node_modules/bs-platform/package.json","includedInParent":true,"mtime":1550344525053}],"generated":{"js":"'use strict';\n\n\nfunction repeat (count,self){\n    if (self.repeat){\n        return self.repeat(count)\n    }\n    if (self.length == 0 || count == 0) {\n            return '';\n        }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n    }\n    return rpt;\n\n};\n\nexports.repeat = repeat;\n/* No side effect */\n","map":{"mappings":[{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/bs-platform/lib/js/caml_utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"../../../node_modules/bs-platform/lib/js/caml_utils.js":"'use strict';\n\n\nfunction repeat (count,self){\n    if (self.repeat){\n        return self.repeat(count)\n    }\n    if (self.length == 0 || count == 0) {\n            return '';\n        }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n    }\n    return rpt;\n\n};\n\nexports.repeat = repeat;\n/* No side effect */\n"},"lineCount":34}},"hash":"5d1f3dfe89706b406a02d9a04cf52902","cacheData":{"env":{}}}